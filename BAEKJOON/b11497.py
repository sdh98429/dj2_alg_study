T = int(input())
# 리스트의 숫자들이 마치 원 같은 형태를 이루는데, 원의 한 점에서 반대 끝점으로 가는 경로가 2개라는 것을 연상시켜봅시다.
# 입력 받은 리스트를 오름차 순으로 정렬 후, 최솟값과 최댓값을 끝으로 가지는 리스트 두 개 L1, L2를 만듭니다.
# 이제 남은 값들을 순서대로 L1에 하나 주고, L2에 하나 주는 식으로 진행 후 최대 차이값을 비교해주면 됩니다.
for tc in range(1, T+1):
    N = int(input())
    L = list(map(int, input().split()))
    L.sort() # 내장함수 하나 썼습니다...ㅠ
    max_L = 0 # 최대 차이값
    L1 = [L[0]] + L[1:-1:2] + [L[-1]] # 최솟값, 최댓값 고정이고 1,3,5,7.. 홀수 번째 요소 넣는 L1
    L2 = [L[0]] + L[2:-1:2] + [L[-1]] # 최솟값, 최댓값 고정이고 2,4,6,7... 짝수 번쨰 요소 넣는 L2
    for i in range(len(L1)-1): # 최대 차이값 구하기, 전체 리스트가 홀수 개인 경우 L1, L2의 요소 개수가 L1이 하나 더 많을 수 있어 번거롭지만 두개의 for문으로 처리해뒀습니다.
        if max_L < L1[i+1] - L1[i]:
            max_L = L1[i+1] - L1[i]
    for j in range(len(L2)-1):
        if max_L < L2[j+1] - L2[j]:
            max_L = L2[j+1] - L2[j]
    print(max_L) # 결과값!