# 2번 업무 완료하기 02:20:11
               
 
제한 조건
 
실행시간 : 50개의 테스트 케이스를 합쳐서 C/C++의 경우 1초, JAVA의 경우 1초, Python 3초

메 모 리 : Heap, Global, Stack 등을 모두 합해 최대 256MB까지 사용 가능 (단, 스택은 최대 1MB까지 사용 가능)
 

제출 횟수 제한
 
제한 없음
 

채점
 
답안을 제출하면 결과를 판정해서 실시간으로 알려주며 그 의미는 다음과 같다.

Accept : 정상적으로 제출되었다는 의미 (컴파일 에러 등 없다는 의미이며 점수는 공개하지 않음)

Fail : 컴파일, 런타임 에러 등으로 0점
 

평가
 
sample_input은 편의를 위해 제공하며, 실제 채점은 별도의 평가용 input으로 이루어진다.

제한 시간 이내에 평가용 input의 모든 테스트 케이스에 대해 정답을 도출하면 Pass 이며,

그 외에 오답, 부분 정답, 시간 제한을 초과하는 경우 1회 Fail이 된다.
 

 

 

김수석의 파트에 연말에 급하게 완료해야 하는 업무들이 부여되었다.  업무들은 단순해서 다른 부서에서 일하고 있는 직원들을 지원받아 완료시키려 한다.

각각의 업무들은 업무 번호를 가지고 있으며 업무를 완료하는데 걸리는 소요시간이 정해져 있다.

업무번호는 1부터 시작하여 1씩 증가하면서 부여된다.

업무는 독립적으로 진행이 가능한 경우도 있고 다른 업무들이 완료되어야 진행할 수 있는 업무들도 있다. 

한 명의 직원은 하나의 업무를 맡게 되며 이 업무가 완료되기 전까지는 다른 업무를 맡을 수 없다.  따라서 업무를 최대한 빨리 완료시키기 위해서는  

가능한 많은 수의 직원들을 투입하여야 한다. 급한 업무임으로 투입되는 직원들의 비용은 고려하지 않는다. 

빠른 진행을 위해 김수석은 단 하나의 업무를 도와줄수 있고, 이 경우 도와주는 업무의 소요시간은 반으로 줄어든다.

 

업무를 완료하는데 필요한 소요시간과 업무를 시작하기 위해 미리 완료해야 하는 업무 목록이 주어졌을 때 김수석과 직원들이 투입되어  

전체 업무를 완료시키기 위해 필요한 최소 소요시간을 구하는 프로그램을 작성하여라. 

 

예를 들어 아래 [표-1]와 같이 완료해야 하는 업무가 주어지는 경우를 생각해보자.

 
                  
 
업무번호
 
1
 
2
 
3
 

미리 완료해야 하는 업무목록
 
없음
 
없음
 
없음
 

업무 소요시간
 
40
 
50
 
60
 

           [표-1] 완료해야 하는 업무 : 3개

 

위와 같이 각 업무들을 독립적으로 시작할 수 있는 경우, 모든 업무를 가장 빠르게 완료하는 방법은 3명의 직원을 투입하는 것이다.   

3명의 직원이 업무를 동시에 시작하면 모든 업무를 완료시키는데 소요되는 최소시간은 60이 된다.  

하지만 김수석이 업무3을 도와주게 되면 업무3이 완료되는 시간은 30으로 줄어들며, 모든 업무를 완료시키는 최소시간은 50이 된다. 

 

[표-2]와 같이 업무2를 먼저 완료한 후 업무1를 시작할 수 있는 경우에는 직원 2명을 투입해야 한다. 첫 번째 직원이 업무 2를 완료한 후 업무 1을 시작한다.   

두 번째 직원은 업무 3을 진행한다.  전체 업무를 완료시키는데 최소 소요시간은 총 90이 된다.   

이때 김수석이 업무2를 도와주게 되면 업무2는 소요시간이 25가 되며, 전체 업무를 완료하는데 최소 소요시간은 65가 된다. 

 
                  
 
업무번호
 
1
 
2
 
3
 

미리 완료해야 하는 업무목록
 
2
 
없음
 
없음
 

업무 소요시간
 
40
 
50
 
60
 

[표-2] 업무1을 시작하기 위해서는 업무2가 완료되어야 함

 

[표-3]의 경우 업무1, 업무2, 업무3이 순환관계를 가지고 있다.  업무1을 시작하기 위해서는 업무2가 완료되어야 하고, 업무2를 시작하기 위해서는 업무3이 완료되어야 하며 

업무3을 시작하기 위해서는 업무1을 완료해야한다. 이와 같이 완료해야 하는 업무들 중의 일부가 순환관계를 가지는 경우에는 모든 업무를 완료할 수없게 된다. 

이 경우 -1을 출력하면 된다. 

 
                  
 
업무번호
 
1
 
2
 
3
 

미리 완료해야 하는 업무목록
 
2
 
3
 
1
 

업무 소요시간
 
40
 
50
 
60
 

[표-3] 모든 업무를 완료할 수 없는 경우

 

 

[표-4]의 경우 최소 소요시간으로 업무를 수행하는 방법은 여러 가지가 있으며, 이중 아래와 같은 두 가지 예가 있을 수 있다.   

다만 [그림1]과 [그림2] 모두 최소시간은 똑같으므로, 업무 할당 방법이나 직원 수에 상관없이 최소 시간만 고려해서 구현하면 된다.  

김수석이 업무1을 도와주면 전체 업무를 완료하는데 소요되는 최소 시간은 360이 된다. (업무1의 소요시간은 125 / 2 = 62가 된다.) 

 
                           
 
업무번호
 
1
 
2
 
3
 
4
 
5
 
6
 

미리 완료해야 하는 업무목록
 
3
 
없음
 
2, 4
 
2
 
2, 4
 
2
 

업무 소요시간
 
125
 
110
 
80
 
105
 
145
 
50
 

[표-4] 업무를 완료하는 방식이 다양한 경우

 

   

[그림1] 직원 3명을 투입하는 경우

 

 

[그림2] 직원 2명을 투입하는 경우

 

 

[제약 사항]

1. 주어지는 업무의 개수 N은 1개 이상 50개 이하이다.(1 ≤ N ≤ 50)

2. 업무 번호는 1부터 N까지의 숫자로 나타내며, 중복되는 경우는 없다.

3. 업무별 소요시간은 2이상 1,000 이하의 정수로 주어진다.

4. 업무별 미리 완료해야 하는 업무의 개수 M은 0개 이상 N-1개 이하이다. (0 ≤ M ≤ N-1)

5. 투입할 수 있는 직원의 수는 제한이 없으며, 비용도 무시한다.

6. 한 명의 직원이 한번에 하나의 업무 만을 맡을 수 있으며, 업무가 끝나기 전에는 다른 업무를 맡을 수 없다.

7. 김수석은 단 하나의 업무만 도와줄 수 있으며, 이 때 도와주는 업무의 소요시간은 반으로 줄어든다.

8. 소요시간이 홀수인 경우 반으로 줄어들 때 소수점 이하는 제외된다. (예 : 소요시간 25 à 반으로 줄어들면 12)

 

[입력]

입력의 가장 첫 줄에는 총 테스트 케이스의 개수 T가 주어진다. 그 다음 줄부터는 각 테스트 케이스가 주어진다.

테스트 케이스의 첫째 줄에는 완료해야 하는 업무의 수 N이 주어진다.

그 다음 N개의 줄에는 1부터 N까지의 업무번호 순으로 업무의 정보가 주어진다.

각 줄에는 업무 소요시간, 미리 완료해야 하는 업무들의 개수 M이 주어지고, 미리 완료해야 하는 업무번호 M개가 스페이스로 구분되어 나열된다.  

미리 완료해야 하는 업무번호는 정렬되어 있지 않음에 유의하라.

 

[출력]

테스트 케이스 T에 대한 결과는 “#T”을찍고, 한 칸 띄고, 정답을 출력한다. (T는 테스트케이스의 번호를 의미하며 1부터 시작한다. )

정답은 모든 업무를 완료하기 위해 필요한 최소 소요시간이다. (모든 업무를 완료할수 없는 경우 -1을 출력한다.)

 

 

[예제 입력]
   
 
5       // 테스트 케이스의 수

3         // 첫 번째 테스트 케이스, N=3

194 0   // 업무1

755 0   // 업무2

3 0      // 업무3

5             // 두 번째 테스트 케이스, N=5

676 0       // 업무1

586 1 3     // 업무2

544 0       // 업무3

365 2 3 5  // 업무4

541 0      // 업무5

…      // 나머지 테스트 케이스는 sample_input.txt 를 참조한다.
 

 

[예제 입력에 대한 정답 출력]
   
 
#1 377

#2 906

#3 -1

#4 11877

#5 13278
 
